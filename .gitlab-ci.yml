stages:
  - pylint_test
  - dev_test

pylintjob:
  stage: pylint_test
  script:
    - pylint --rcfile=tests/pylintrc niftysplit

testjob:
  stage: dev_test
  script:
    # !!kill coverage in case of hanging processes
    - if pgrep coverage; then pkill -f coverage; fi

    # print system info
    - pwd

    # save current folder path just in case
    - export niftysplit_dir=$(pwd)

    #### python 3 tests ###################################

    # create a virtual env for testing
    - venv="niftysplit-test-py3"
    - mypython=$(which python3)
    - virtualenv -p $mypython $venv
    - cd $venv
    - venv_dir=$(pwd)
    - source bin/activate
    
    # print Python version to CI output
    - which python
    - python --version
    - cd $niftysplit_dir

    - pip install -r requirements-test.txt

    # tests
    - python -m unittest discover -s "tests" -p "*_test.py"

    # deactivate virtual environment
    - deactivate
    - cd $niftysplit_dir
    
    ###############end of python3


    #### python 2 tests ###################################

    # create a virtual env for testing
    - venv="niftysplit-test-py2"
    - mypython=$(which python2)
    - virtualenv -p $mypython $venv
    - cd $venv
    - venv_dir=$(pwd)
    - source bin/activate

    # print Python version to CI output
    - which python
    - python --version
    - cd $niftysplit_dir

    - pip install -r requirements-test.txt

    # tests
    - coverage run -a --source . -m unittest discover -s "tests" -p "*_test.py"
    - coverage report -m

    # deactivate virtual environment
    - deactivate
    - cd $niftysplit_dir

    ###############end of python3

    - echo 'finished test'
  tags:
    - gift-linux


